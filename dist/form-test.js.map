{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap faadb506392a87c130cc","webpack:///./lib/index.js","webpack:///./~/extend/index.js","webpack:///./lib/defaultRule.js","webpack:///./lib/check.js","webpack:///./lib/test.js","webpack:///./~/mustache/mustache.js","webpack:///./lib/addRule.js","webpack:///./lib/replaceRule.js","webpack:///./package.json"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;AACA,8BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACbA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAmB;;AAEnB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;;AAEA,QAAO,YAAY;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA,OAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;ACpFA;AACA;AACA;AACA;AACA,oBAAmB,MAAM;AACzB,MAAK;AACL;AACA;AACA;AACA,iBAAgB,MAAM;AACtB,MAAK;AACL;AACA;AACA;AACA,iBAAgB,MAAM;AACtB,MAAK;AACL;AACA,+EAA8E,KAAK;AACnF;AACA,iBAAgB,MAAM;AACtB,MAAK;AACL;AACA,0CAAyC,IAAI;AAC7C;AACA,iBAAgB,MAAM;AACtB,MAAK;AACL;AACA,yBAAwB,IAAI;AAC5B;AACA,iBAAgB,MAAM;AACtB,MAAK;AACL;AACA,uBAAsB,GAAG;AACzB;AACA,uBAAsB,MAAM;AAC5B;AACA;;;;;;;ACpCA;AACA;AACA;AACA,kBAAiB;AACjB,qBAAoB;AACpB,qBAAoB;AACpB,0BAAyB;AACzB,0BAAyB;AACzB,4BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA4B;AAC5B,6BAA4B;AAC5B,kCAAiC;AACjC;AACA;AACA;AACA,yCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AClHA;AACA;AACA;AACA,kBAAiB;AACjB,iBAAgB;AAChB,qBAAoB,OAAO;AAC3B,iBAAgB,SAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,cAAc;AAC7B;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB,kBAAiB;AACjB;AACA;AACA;AACA;AACA,sBAAqB;AACrB,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA,SAAQ,YAAY,EAAE,aAAa,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,iEAAgE,eAAe,GAAG,OAAO;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY;AACZ;AACA;AACA;;AAEA;AACA,SAAQ,gBAAgB,EAAE,iBAAiB,EAAE;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;;;;;;;AC3UA;AACA,+BAA8B,UAAU;AACxC;AACA;;AAEA;;AAEA;AACA;AACA,sBAAqB;AACrB,IAAG;AACH,uYAAiC;AACjC,IAAG;AACH;AACA,8BAA6B;AAC7B;AACA,EAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qCAAoC;AACpC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,gBAAe;AACf,eAAc;AACd,eAAc;AACd,iBAAgB;AAChB,gBAAe;AACf,iBAAgB;AAChB,iBAAgB;AAChB,iBAAgB;AAChB;;AAEA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA,uBAAsB;AACtB,4BAA2B;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAsC,SAAS;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAsB;AACtB,qBAAoB;AACpB,qBAAoB;AACpB,wBAAuB,oBAAoB,KAAK;AAChD,0BAAyB;;AAEzB;AACA,yBAAwB,MAAM;AAC9B;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,2DAA0D;AAC1D;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,oDAAmD,iBAAiB;AACpE;;AAEA;AACA;AACA,YAAW;AACX;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAO,qBAAqB;AAC5B;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA,QAAO,wCAAwC;AAC/C;AACA,QAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,+CAA8C,eAAe;AAC7D;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,+CAA8C,eAAe;AAC7D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,+CAA8C,eAAe;AAC7D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,kDAAiD,iBAAiB;AAClE;AACA;AACA,MAAK;AACL;AACA,MAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,wBAAuB,MAAM;;AAE7B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,EAAC;;;;;;;ACrnBD;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA,G","file":"form-test.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"FormTest\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"FormTest\"] = factory();\n\telse\n\t\troot[\"FormTest\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap faadb506392a87c130cc\n **/","var extend = require('extend')\nvar Test = function (settings) {\n    var defaultSettings = {\n        rule: extend(true, {}, require('./defaultRule'))\n    }\n    extend(true, defaultSettings, settings)\n    settings = defaultSettings\n    this._rule = settings.rule\n}\nTest.prototype.check = require('./check.js')\nTest.prototype.addRule = require('./addRule.js')\nTest.prototype.replaceRule = require('./replaceRule.js')\nTest.prototype.package = require('../package.json')\nmodule.exports = Test\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/index.js\n ** module id = 0\n ** module chunks = 0\n **/","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) {/**/}\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone,\n\t\ttarget = arguments[0],\n\t\ti = 1,\n\t\tlength = arguments.length,\n\t\tdeep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t} else if ((typeof target !== 'object' && typeof target !== 'function') || target == null) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = target[name];\n\t\t\t\tcopy = options[name];\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\ttarget[name] = extend(deep, clone, copy);\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\ttarget[name] = copy;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/extend/index.js\n ** module id = 1\n ** module chunks = 0\n **/","module.exports = {\n    'required': {\n        regexp: /\\S/,\n        be: true,\n        msg: '请输入{{name}}'\n    },\n    'number': {\n        regexp: /^[+-]?[1-9][0-9]*(\\.[0-9]+)?([eE][+-][1-9][0-9]*)?$|^[+-]?0?\\.[0-9]+([eE][+-][1-9][0-9]*)?$|^0$/,\n        be: true,\n        msg: '{{name}}的格式不正确'\n    },\n    'digits': {\n        regexp: /^\\s*\\d+\\s*$/,\n        be: true,\n        msg: '{{name}}的格式不正确'\n    },\n    'email': {\n        regexp: /^\\s*([a-zA-Z0-9_\\.\\-\\+])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,20})\\s*$/,\n        be: true,\n        msg: '{{name}}的格式不正确'\n    },\n    'url': {\n        regexp: /^(http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?$/,\n        be: true,\n        msg: '{{name}}的格式不正确'\n    },\n    'easyurl': {\n        regexp: /^(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?$/,\n        be: true,\n        msg: '{{name}}的格式不正确'\n    },\n    'mobile': {\n        regexp: /^1\\d{10}$/,\n        be: true,\n        msg: '请输入正确的{{name}}'\n    }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/defaultRule.js\n ** module id = 2\n ** module chunks = 0\n **/","var extend = require('extend')\nvar test = require('./test')\n/**\n * @param value {string}\n * @param settings {object}\n * @param callback {object}\n * @param callback.done {function}\n * @param callback.fail {function}\n * @param callback.always {function}\n */\nmodule.exports = function (value, settings, callback) {\n    var self = this\n    if (typeof callback === 'function') {\n        callback = {\n            always: callback\n        }\n    }\n    var defaultCallback = {\n        done: function () {},\n        fail: function () {},\n        asyncFail: function () {},\n        always: function () {}\n    }\n    let callbackAlways = function (stat) {\n        let outputStat = extend(true, {}, stat)\n        outputStat.fail = outputStat.async.fail.concat(outputStat.sync.fail)\n        outputStat.done = outputStat.async.done.concat(outputStat.sync.done)\n        callback.always(outputStat)\n    }\n    extend(true, defaultCallback, callback)\n    callback = defaultCallback\n    var stat = {\n        sync: {\n            fail: [],\n            done: [],\n            count: 0\n        },\n        async: {\n            fail: [],\n            done: [],\n            count: 0\n        }\n    }\n    var checkAsyncTestDone = function () {\n        if (stat.async.count === stat.async.done.length) {\n            callback.done()\n        }\n        if (stat.async.count === stat.async.done.length + stat.async.fail.length) {\n            callbackAlways(stat)\n        }\n    }\n    var emit = function (action) {\n        switch (action.type) {\n            case 'SYNC_DONE':\n                stat.sync.done.push({\n                    rule: action.rule\n                })\n            break\n            case \"ASYNC_DONE\":\n                stat.async.done.push({\n                    rule: action.rule\n                })\n                checkAsyncTestDone()\n            break\n            case 'SYNC_FAIL':\n                stat.sync.fail.push({\n                    rule: action.rule,\n                    msg: action.errorMsg\n                })\n            break\n            case 'ASYNC_FAIL':\n                var errorData = {\n                    rule: action.rule,\n                    msg: action.errorMsg\n                }\n                stat.async.fail.push(errorData)\n                callback.asyncFail(errorData)\n                checkAsyncTestDone()\n            break\n            case 'SYNC_COUNT_INCREMENT':\n                stat.sync.count++\n            break\n            case 'ASYNC_COUNT_INCREMENT':\n                stat.async.count++\n            break\n        }\n    }\n    settings.tests.some(function (item, index) {\n        if (typeof item === 'string') {\n            item = {\n                rule: item\n            }\n        }\n        if (item.rule) {\n            test(value, settings, self._rule[item.rule], emit)\n        }\n        else {\n            test(value, settings, item, emit)\n        }\n        // 非 every 模式下出现一次错误就停止后续校验\n        if (!settings.every && stat.sync.fail.length !==0) {\n            return true\n        }\n    })\n    if (stat.sync.fail.length) {\n        callback.fail(stat.sync.fail)\n    }\n    // 不存在异步校验时，根据同步校验错误计数回调 fail 或 done\n    if (stat.async.count === 0) {\n        if (stat.sync.fail.length === 0) {\n            callback.done()\n        }\n        callbackAlways(stat)\n    }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/check.js\n ** module id = 3\n ** module chunks = 0\n **/","var extend = require('extend')\nvar Mustache = require('mustache')\n/**\n * @param value {string}\n * @param rule {object}\n * @param settings {object} test.check(value, settings, callback)\n * @param emit {function} ./check.js: emeit function () {}\n */\nvar renderMsg = function (template, data) {\n    template = template || ''\n     // 不要删除此段代码，永远保持向前兼容\n     if (data.self.maxLengthByte) {\n         data.self.maxLengthByteChinese = Math.floor(data.self.maxLengthByte / 2)\n     }\n     if (data.self.minLengthByte) {\n         data.self.minLengthByteChinese = Math.floor(data.self.minLengthByte / 2)\n     }\n     return Mustache.render(template, data)\n}\nvar byteLength = function(str) {\n\tvar byteLen = 0\n\tfor(var i = 0; i<str.length; i++){\n\t\tif(str.charCodeAt(i)>255){\n\t\t\tbyteLen += 2\n\t\t}else{\n\t\t\tbyteLen++\n\t\t}\n　　 }\n\treturn byteLen\n}\nmodule.exports = function test (value, settings, rule, emit) {\n    if (rule.trim) {\n        value = value.trim()\n    }\n    var errorMsgRenderData = {}\n    extend(true, errorMsgRenderData, settings)\n    errorMsgRenderData.self = rule\n    var attrs = [\n        {\n            key: 'regexp',\n            test: function () {\n                if (rule.regexp.test(value) === rule.be) {\n                    emit({\n                        type: 'SYNC_DONE',\n                        rule: rule\n                    })\n                }\n                else {\n                    emit({\n                        type: 'SYNC_FAIL',\n                        rule: rule,\n                        errorMsg: renderMsg(rule.msg, errorMsgRenderData)\n                    })\n                }\n            }\n        },\n        {\n            key: 'equal',\n            test: function () {\n                if (rule.equal === value) {\n                    emit({\n                        type: 'SYNC_DONE',\n                        rule: rule\n                    })\n                }\n                else {\n                    emit({\n                        type: 'SYNC_FAIL',\n                        rule: rule,\n                        errorMsg: renderMsg(rule.msg, errorMsgRenderData)\n                    })\n                }\n            }\n        },\n        {\n            key: 'fn',\n            test: function () {\n                var errorMsg = rule.fn(value)\n                if (!errorMsg) {\n                    emit({\n                        type: 'SYNC_DONE',\n                        rule: rule\n                    })\n                }\n                else {\n                    emit({\n                        type: 'SYNC_FAIL',\n                        rule: rule,\n                        errorMsg: renderMsg(errorMsg, errorMsgRenderData)\n                    })\n                }\n            }\n        },\n        {\n            key: 'async',\n            test: function () {\n                var p = new Promise(rule.async)\n                p.then(function () {\n                    emit({\n                        type: 'ASYNC_DONE',\n                        rule: rule\n                    })\n                }, function (errorMsg) {\n                    emit({\n                        type: 'ASYNC_FAIL',\n                        rule: rule,\n                        errorMsg: renderMsg(errorMsg, errorMsgRenderData)\n                    })\n                })\n            }\n        }\n    ]\n    var hasMinMaxAttr = {\n        minLengthByte: function () {\n            let length = byteLength(value)\n            if (length >= rule.minLengthByte) {\n                emit({\n                    type: 'SYNC_DONE',\n                    rule: rule\n                })\n            }\n            else {\n                emit({\n                    type: 'SYNC_FAIL',\n                    rule: rule,\n                    errorMsg: renderMsg(rule.msg, errorMsgRenderData)\n                })\n            }\n        },\n        minLength: function () {\n            if (value.length >= rule.minLength) {\n                emit({\n                    type: 'SYNC_DONE',\n                    rule: rule\n                })\n            }\n            else {\n                emit({\n                    type: 'SYNC_FAIL',\n                    rule: rule,\n                    errorMsg: renderMsg(rule.msg, errorMsgRenderData)\n                })\n            }\n        },\n        min: function (value) {\n            if (value >= rule.min) {\n                emit({\n                    type: 'SYNC_DONE',\n                    rule: rule\n                })\n            }\n            else {\n                emit({\n                    type: 'SYNC_FAIL',\n                    rule: rule,\n                    errorMsg: renderMsg(rule.msg, errorMsgRenderData)\n                })\n            }\n        },\n        maxLengthByte: function () {\n            let length = byteLength(value)\n            if (length <= rule.maxLengthByte) {\n                emit({\n                    type: 'SYNC_DONE',\n                    rule: rule\n                })\n            }\n            else {\n                emit({\n                    type: 'SYNC_FAIL',\n                    rule: rule,\n                    errorMsg: renderMsg(rule.msg, errorMsgRenderData)\n                })\n            }\n        },\n        maxLength: function () {\n            if (value.length <= rule.maxLength) {\n                emit({\n                    type: 'SYNC_DONE',\n                    rule: rule\n                })\n            }\n            else {\n                emit({\n                    type: 'SYNC_FAIL',\n                    rule: rule,\n                    errorMsg: renderMsg(rule.msg, errorMsgRenderData)\n                })\n            }\n        },\n        max: function (value) {\n            if (value <= rule.max) {\n                emit({\n                    type: 'SYNC_DONE',\n                    rule: rule\n                })\n            }\n            else {\n                emit({\n                    type: 'SYNC_FAIL',\n                    rule: rule,\n                    errorMsg: renderMsg(rule.msg, errorMsgRenderData)\n                })\n            }\n        },\n        minmaxLengthByte: function () {\n            let length = byteLength(value)\n            if (length >= rule.minLengthByte && length <= rule.maxLengthByte) {\n                emit({\n                    type: 'SYNC_DONE',\n                    rule: rule\n                })\n            }\n            else {\n                emit({\n                    type: 'SYNC_FAIL',\n                    rule: rule,\n                    errorMsg: renderMsg(rule.msg, errorMsgRenderData)\n                })\n            }\n        },\n        minmaxLength: function () {\n            if (value.length >= rule.minLength && value.length <= rule.maxLength) {\n                emit({\n                    type: 'SYNC_DONE',\n                    rule: rule\n                })\n            }\n            else {\n                emit({\n                    type: 'SYNC_FAIL',\n                    rule: rule,\n                    errorMsg: renderMsg(rule.msg, errorMsgRenderData)\n                })\n            }\n        },\n        minmax: function (value) {\n            if (value >= rule.min && value <= rule.max) {\n                emit({\n                    type: 'SYNC_DONE',\n                    rule: rule\n                })\n            }\n            else {\n                emit({\n                    type: 'SYNC_FAIL',\n                    rule: rule,\n                    errorMsg: renderMsg(rule.msg, errorMsgRenderData)\n                })\n            }\n        }\n    }\n\n    if (rule.async) {\n        emit({\n            type: 'ASYNC_COUNT_INCREMENT'\n        })\n    }\n    else {\n        emit({\n            type: 'SYNC_COUNT_INCREMENT'\n        })\n    }\n\n    // {minLength:5} {maxLength:10} {minLength:5,maxLength:10}\n    if (rule.minLength || rule.maxLength) {\n        if (rule.minLength && !rule.maxLength) {\n            hasMinMaxAttr.minLength()\n        }\n        else if (rule.maxLength && !rule.minLength) {\n            hasMinMaxAttr.maxLength()\n        }\n        // {minLength:5, maxLength:10}\n        else {\n            hasMinMaxAttr.minmaxLength()\n        }\n    }\n    else if (rule.max || rule.min) {\n        value = parseFloat(value)\n        if (isNaN(value)) {\n            emit({\n                type: 'SYNC_FAIL',\n                rule: rule,\n                errorMsg: renderMsg('Please enter the Numbers', errorMsgRenderData)\n            })\n            if (typeof window !== 'undefined') {\n                if (typeof window.log !== 'undefined') {\n                    console.log('value is NaN, please use the [{rule: \"number\"}, {max: 5}]. https://github.com/fast-flow/form-test/issues/6')\n                }\n            }\n            return\n        }\n        if (rule.min && !rule.max) {\n            hasMinMaxAttr.min(value)\n        }\n        else if (rule.max && !rule.min) {\n            hasMinMaxAttr.max(value)\n        }\n        // {min:5, max:10}\n        else {\n            hasMinMaxAttr.minmax(value)\n        }\n\n    }\n    // {minLengthByte:5} {maxLengthByte:10} {minLengthByte:5,maxLengthByte:10}\n    else if (rule.minLengthByte || rule.maxLengthByte) {\n        if (rule.minLengthByte && !rule.maxLengthByte) {\n            hasMinMaxAttr.minLengthByte()\n        }\n        else if (rule.maxLengthByte && !rule.minLengthByte) {\n            hasMinMaxAttr.maxLengthByte()\n        }\n        // {minLengthByte:5, maxLengthByte:10}\n        else {\n            hasMinMaxAttr.minmaxLengthByte()\n        }\n    }\n    else {\n        var findAttr = false\n        attrs.some(function (item) {\n            var match = rule[item.key]\n            if (match) {\n                findAttr = true\n                item.test()\n                return true\n            }\n        })\n        if (!findAttr) {\n            throw new Error('node_modules/form-test: Invalid format of rules https://github.com/fast-flow/form-check/issues/1')\n        }\n    }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/test.js\n ** module id = 4\n ** module chunks = 0\n **/","/*!\n * mustache.js - Logic-less {{mustache}} templates with JavaScript\n * http://github.com/janl/mustache.js\n */\n\n/*global define: false Mustache: true*/\n\n(function defineMustache (global, factory) {\n  if (typeof exports === 'object' && exports && typeof exports.nodeName !== 'string') {\n    factory(exports); // CommonJS\n  } else if (typeof define === 'function' && define.amd) {\n    define(['exports'], factory); // AMD\n  } else {\n    global.Mustache = {};\n    factory(global.Mustache); // script, wsh, asp\n  }\n}(this, function mustacheFactory (mustache) {\n\n  var objectToString = Object.prototype.toString;\n  var isArray = Array.isArray || function isArrayPolyfill (object) {\n    return objectToString.call(object) === '[object Array]';\n  };\n\n  function isFunction (object) {\n    return typeof object === 'function';\n  }\n\n  /**\n   * More correct typeof string handling array\n   * which normally returns typeof 'object'\n   */\n  function typeStr (obj) {\n    return isArray(obj) ? 'array' : typeof obj;\n  }\n\n  function escapeRegExp (string) {\n    return string.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, '\\\\$&');\n  }\n\n  /**\n   * Null safe way of checking whether or not an object,\n   * including its prototype, has a given property\n   */\n  function hasProperty (obj, propName) {\n    return obj != null && typeof obj === 'object' && (propName in obj);\n  }\n\n  // Workaround for https://issues.apache.org/jira/browse/COUCHDB-577\n  // See https://github.com/janl/mustache.js/issues/189\n  var regExpTest = RegExp.prototype.test;\n  function testRegExp (re, string) {\n    return regExpTest.call(re, string);\n  }\n\n  var nonSpaceRe = /\\S/;\n  function isWhitespace (string) {\n    return !testRegExp(nonSpaceRe, string);\n  }\n\n  var entityMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '/': '&#x2F;',\n    '`': '&#x60;',\n    '=': '&#x3D;'\n  };\n\n  function escapeHtml (string) {\n    return String(string).replace(/[&<>\"'`=\\/]/g, function fromEntityMap (s) {\n      return entityMap[s];\n    });\n  }\n\n  var whiteRe = /\\s*/;\n  var spaceRe = /\\s+/;\n  var equalsRe = /\\s*=/;\n  var curlyRe = /\\s*\\}/;\n  var tagRe = /#|\\^|\\/|>|\\{|&|=|!/;\n\n  /**\n   * Breaks up the given `template` string into a tree of tokens. If the `tags`\n   * argument is given here it must be an array with two string values: the\n   * opening and closing tags used in the template (e.g. [ \"<%\", \"%>\" ]). Of\n   * course, the default is to use mustaches (i.e. mustache.tags).\n   *\n   * A token is an array with at least 4 elements. The first element is the\n   * mustache symbol that was used inside the tag, e.g. \"#\" or \"&\". If the tag\n   * did not contain a symbol (i.e. {{myValue}}) this element is \"name\". For\n   * all text that appears outside a symbol this element is \"text\".\n   *\n   * The second element of a token is its \"value\". For mustache tags this is\n   * whatever else was inside the tag besides the opening symbol. For text tokens\n   * this is the text itself.\n   *\n   * The third and fourth elements of the token are the start and end indices,\n   * respectively, of the token in the original template.\n   *\n   * Tokens that are the root node of a subtree contain two more elements: 1) an\n   * array of tokens in the subtree and 2) the index in the original template at\n   * which the closing tag for that section begins.\n   */\n  function parseTemplate (template, tags) {\n    if (!template)\n      return [];\n\n    var sections = [];     // Stack to hold section tokens\n    var tokens = [];       // Buffer to hold the tokens\n    var spaces = [];       // Indices of whitespace tokens on the current line\n    var hasTag = false;    // Is there a {{tag}} on the current line?\n    var nonSpace = false;  // Is there a non-space char on the current line?\n\n    // Strips all whitespace tokens array for the current line\n    // if there was a {{#tag}} on it and otherwise only space.\n    function stripSpace () {\n      if (hasTag && !nonSpace) {\n        while (spaces.length)\n          delete tokens[spaces.pop()];\n      } else {\n        spaces = [];\n      }\n\n      hasTag = false;\n      nonSpace = false;\n    }\n\n    var openingTagRe, closingTagRe, closingCurlyRe;\n    function compileTags (tagsToCompile) {\n      if (typeof tagsToCompile === 'string')\n        tagsToCompile = tagsToCompile.split(spaceRe, 2);\n\n      if (!isArray(tagsToCompile) || tagsToCompile.length !== 2)\n        throw new Error('Invalid tags: ' + tagsToCompile);\n\n      openingTagRe = new RegExp(escapeRegExp(tagsToCompile[0]) + '\\\\s*');\n      closingTagRe = new RegExp('\\\\s*' + escapeRegExp(tagsToCompile[1]));\n      closingCurlyRe = new RegExp('\\\\s*' + escapeRegExp('}' + tagsToCompile[1]));\n    }\n\n    compileTags(tags || mustache.tags);\n\n    var scanner = new Scanner(template);\n\n    var start, type, value, chr, token, openSection;\n    while (!scanner.eos()) {\n      start = scanner.pos;\n\n      // Match any text between tags.\n      value = scanner.scanUntil(openingTagRe);\n\n      if (value) {\n        for (var i = 0, valueLength = value.length; i < valueLength; ++i) {\n          chr = value.charAt(i);\n\n          if (isWhitespace(chr)) {\n            spaces.push(tokens.length);\n          } else {\n            nonSpace = true;\n          }\n\n          tokens.push([ 'text', chr, start, start + 1 ]);\n          start += 1;\n\n          // Check for whitespace on the current line.\n          if (chr === '\\n')\n            stripSpace();\n        }\n      }\n\n      // Match the opening tag.\n      if (!scanner.scan(openingTagRe))\n        break;\n\n      hasTag = true;\n\n      // Get the tag type.\n      type = scanner.scan(tagRe) || 'name';\n      scanner.scan(whiteRe);\n\n      // Get the tag value.\n      if (type === '=') {\n        value = scanner.scanUntil(equalsRe);\n        scanner.scan(equalsRe);\n        scanner.scanUntil(closingTagRe);\n      } else if (type === '{') {\n        value = scanner.scanUntil(closingCurlyRe);\n        scanner.scan(curlyRe);\n        scanner.scanUntil(closingTagRe);\n        type = '&';\n      } else {\n        value = scanner.scanUntil(closingTagRe);\n      }\n\n      // Match the closing tag.\n      if (!scanner.scan(closingTagRe))\n        throw new Error('Unclosed tag at ' + scanner.pos);\n\n      token = [ type, value, start, scanner.pos ];\n      tokens.push(token);\n\n      if (type === '#' || type === '^') {\n        sections.push(token);\n      } else if (type === '/') {\n        // Check section nesting.\n        openSection = sections.pop();\n\n        if (!openSection)\n          throw new Error('Unopened section \"' + value + '\" at ' + start);\n\n        if (openSection[1] !== value)\n          throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + start);\n      } else if (type === 'name' || type === '{' || type === '&') {\n        nonSpace = true;\n      } else if (type === '=') {\n        // Set the tags for the next time around.\n        compileTags(value);\n      }\n    }\n\n    // Make sure there are no open sections when we're done.\n    openSection = sections.pop();\n\n    if (openSection)\n      throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + scanner.pos);\n\n    return nestTokens(squashTokens(tokens));\n  }\n\n  /**\n   * Combines the values of consecutive text tokens in the given `tokens` array\n   * to a single token.\n   */\n  function squashTokens (tokens) {\n    var squashedTokens = [];\n\n    var token, lastToken;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      token = tokens[i];\n\n      if (token) {\n        if (token[0] === 'text' && lastToken && lastToken[0] === 'text') {\n          lastToken[1] += token[1];\n          lastToken[3] = token[3];\n        } else {\n          squashedTokens.push(token);\n          lastToken = token;\n        }\n      }\n    }\n\n    return squashedTokens;\n  }\n\n  /**\n   * Forms the given array of `tokens` into a nested tree structure where\n   * tokens that represent a section have two additional items: 1) an array of\n   * all tokens that appear in that section and 2) the index in the original\n   * template that represents the end of that section.\n   */\n  function nestTokens (tokens) {\n    var nestedTokens = [];\n    var collector = nestedTokens;\n    var sections = [];\n\n    var token, section;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      token = tokens[i];\n\n      switch (token[0]) {\n        case '#':\n        case '^':\n          collector.push(token);\n          sections.push(token);\n          collector = token[4] = [];\n          break;\n        case '/':\n          section = sections.pop();\n          section[5] = token[2];\n          collector = sections.length > 0 ? sections[sections.length - 1][4] : nestedTokens;\n          break;\n        default:\n          collector.push(token);\n      }\n    }\n\n    return nestedTokens;\n  }\n\n  /**\n   * A simple string scanner that is used by the template parser to find\n   * tokens in template strings.\n   */\n  function Scanner (string) {\n    this.string = string;\n    this.tail = string;\n    this.pos = 0;\n  }\n\n  /**\n   * Returns `true` if the tail is empty (end of string).\n   */\n  Scanner.prototype.eos = function eos () {\n    return this.tail === '';\n  };\n\n  /**\n   * Tries to match the given regular expression at the current position.\n   * Returns the matched text if it can match, the empty string otherwise.\n   */\n  Scanner.prototype.scan = function scan (re) {\n    var match = this.tail.match(re);\n\n    if (!match || match.index !== 0)\n      return '';\n\n    var string = match[0];\n\n    this.tail = this.tail.substring(string.length);\n    this.pos += string.length;\n\n    return string;\n  };\n\n  /**\n   * Skips all text until the given regular expression can be matched. Returns\n   * the skipped string, which is the entire tail if no match can be made.\n   */\n  Scanner.prototype.scanUntil = function scanUntil (re) {\n    var index = this.tail.search(re), match;\n\n    switch (index) {\n      case -1:\n        match = this.tail;\n        this.tail = '';\n        break;\n      case 0:\n        match = '';\n        break;\n      default:\n        match = this.tail.substring(0, index);\n        this.tail = this.tail.substring(index);\n    }\n\n    this.pos += match.length;\n\n    return match;\n  };\n\n  /**\n   * Represents a rendering context by wrapping a view object and\n   * maintaining a reference to the parent context.\n   */\n  function Context (view, parentContext) {\n    this.view = view;\n    this.cache = { '.': this.view };\n    this.parent = parentContext;\n  }\n\n  /**\n   * Creates a new context using the given view with this context\n   * as the parent.\n   */\n  Context.prototype.push = function push (view) {\n    return new Context(view, this);\n  };\n\n  /**\n   * Returns the value of the given name in this context, traversing\n   * up the context hierarchy if the value is absent in this context's view.\n   */\n  Context.prototype.lookup = function lookup (name) {\n    var cache = this.cache;\n\n    var value;\n    if (cache.hasOwnProperty(name)) {\n      value = cache[name];\n    } else {\n      var context = this, names, index, lookupHit = false;\n\n      while (context) {\n        if (name.indexOf('.') > 0) {\n          value = context.view;\n          names = name.split('.');\n          index = 0;\n\n          /**\n           * Using the dot notion path in `name`, we descend through the\n           * nested objects.\n           *\n           * To be certain that the lookup has been successful, we have to\n           * check if the last object in the path actually has the property\n           * we are looking for. We store the result in `lookupHit`.\n           *\n           * This is specially necessary for when the value has been set to\n           * `undefined` and we want to avoid looking up parent contexts.\n           **/\n          while (value != null && index < names.length) {\n            if (index === names.length - 1)\n              lookupHit = hasProperty(value, names[index]);\n\n            value = value[names[index++]];\n          }\n        } else {\n          value = context.view[name];\n          lookupHit = hasProperty(context.view, name);\n        }\n\n        if (lookupHit)\n          break;\n\n        context = context.parent;\n      }\n\n      cache[name] = value;\n    }\n\n    if (isFunction(value))\n      value = value.call(this.view);\n\n    return value;\n  };\n\n  /**\n   * A Writer knows how to take a stream of tokens and render them to a\n   * string, given a context. It also maintains a cache of templates to\n   * avoid the need to parse the same template twice.\n   */\n  function Writer () {\n    this.cache = {};\n  }\n\n  /**\n   * Clears all cached templates in this writer.\n   */\n  Writer.prototype.clearCache = function clearCache () {\n    this.cache = {};\n  };\n\n  /**\n   * Parses and caches the given `template` and returns the array of tokens\n   * that is generated from the parse.\n   */\n  Writer.prototype.parse = function parse (template, tags) {\n    var cache = this.cache;\n    var tokens = cache[template];\n\n    if (tokens == null)\n      tokens = cache[template] = parseTemplate(template, tags);\n\n    return tokens;\n  };\n\n  /**\n   * High-level method that is used to render the given `template` with\n   * the given `view`.\n   *\n   * The optional `partials` argument may be an object that contains the\n   * names and templates of partials that are used in the template. It may\n   * also be a function that is used to load partial templates on the fly\n   * that takes a single argument: the name of the partial.\n   */\n  Writer.prototype.render = function render (template, view, partials) {\n    var tokens = this.parse(template);\n    var context = (view instanceof Context) ? view : new Context(view);\n    return this.renderTokens(tokens, context, partials, template);\n  };\n\n  /**\n   * Low-level method that renders the given array of `tokens` using\n   * the given `context` and `partials`.\n   *\n   * Note: The `originalTemplate` is only ever used to extract the portion\n   * of the original template that was contained in a higher-order section.\n   * If the template doesn't use higher-order sections, this argument may\n   * be omitted.\n   */\n  Writer.prototype.renderTokens = function renderTokens (tokens, context, partials, originalTemplate) {\n    var buffer = '';\n\n    var token, symbol, value;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      value = undefined;\n      token = tokens[i];\n      symbol = token[0];\n\n      if (symbol === '#') value = this.renderSection(token, context, partials, originalTemplate);\n      else if (symbol === '^') value = this.renderInverted(token, context, partials, originalTemplate);\n      else if (symbol === '>') value = this.renderPartial(token, context, partials, originalTemplate);\n      else if (symbol === '&') value = this.unescapedValue(token, context);\n      else if (symbol === 'name') value = this.escapedValue(token, context);\n      else if (symbol === 'text') value = this.rawValue(token);\n\n      if (value !== undefined)\n        buffer += value;\n    }\n\n    return buffer;\n  };\n\n  Writer.prototype.renderSection = function renderSection (token, context, partials, originalTemplate) {\n    var self = this;\n    var buffer = '';\n    var value = context.lookup(token[1]);\n\n    // This function is used to render an arbitrary template\n    // in the current context by higher-order sections.\n    function subRender (template) {\n      return self.render(template, context, partials);\n    }\n\n    if (!value) return;\n\n    if (isArray(value)) {\n      for (var j = 0, valueLength = value.length; j < valueLength; ++j) {\n        buffer += this.renderTokens(token[4], context.push(value[j]), partials, originalTemplate);\n      }\n    } else if (typeof value === 'object' || typeof value === 'string' || typeof value === 'number') {\n      buffer += this.renderTokens(token[4], context.push(value), partials, originalTemplate);\n    } else if (isFunction(value)) {\n      if (typeof originalTemplate !== 'string')\n        throw new Error('Cannot use higher-order sections without the original template');\n\n      // Extract the portion of the original template that the section contains.\n      value = value.call(context.view, originalTemplate.slice(token[3], token[5]), subRender);\n\n      if (value != null)\n        buffer += value;\n    } else {\n      buffer += this.renderTokens(token[4], context, partials, originalTemplate);\n    }\n    return buffer;\n  };\n\n  Writer.prototype.renderInverted = function renderInverted (token, context, partials, originalTemplate) {\n    var value = context.lookup(token[1]);\n\n    // Use JavaScript's definition of falsy. Include empty arrays.\n    // See https://github.com/janl/mustache.js/issues/186\n    if (!value || (isArray(value) && value.length === 0))\n      return this.renderTokens(token[4], context, partials, originalTemplate);\n  };\n\n  Writer.prototype.renderPartial = function renderPartial (token, context, partials) {\n    if (!partials) return;\n\n    var value = isFunction(partials) ? partials(token[1]) : partials[token[1]];\n    if (value != null)\n      return this.renderTokens(this.parse(value), context, partials, value);\n  };\n\n  Writer.prototype.unescapedValue = function unescapedValue (token, context) {\n    var value = context.lookup(token[1]);\n    if (value != null)\n      return value;\n  };\n\n  Writer.prototype.escapedValue = function escapedValue (token, context) {\n    var value = context.lookup(token[1]);\n    if (value != null)\n      return mustache.escape(value);\n  };\n\n  Writer.prototype.rawValue = function rawValue (token) {\n    return token[1];\n  };\n\n  mustache.name = 'mustache.js';\n  mustache.version = '2.3.0';\n  mustache.tags = [ '{{', '}}' ];\n\n  // All high-level mustache.* functions use this writer.\n  var defaultWriter = new Writer();\n\n  /**\n   * Clears all cached templates in the default writer.\n   */\n  mustache.clearCache = function clearCache () {\n    return defaultWriter.clearCache();\n  };\n\n  /**\n   * Parses and caches the given template in the default writer and returns the\n   * array of tokens it contains. Doing this ahead of time avoids the need to\n   * parse templates on the fly as they are rendered.\n   */\n  mustache.parse = function parse (template, tags) {\n    return defaultWriter.parse(template, tags);\n  };\n\n  /**\n   * Renders the `template` with the given `view` and `partials` using the\n   * default writer.\n   */\n  mustache.render = function render (template, view, partials) {\n    if (typeof template !== 'string') {\n      throw new TypeError('Invalid template! Template should be a \"string\" ' +\n                          'but \"' + typeStr(template) + '\" was given as the first ' +\n                          'argument for mustache#render(template, view, partials)');\n    }\n\n    return defaultWriter.render(template, view, partials);\n  };\n\n  // This is here for backwards compatibility with 0.4.x.,\n  /*eslint-disable */ // eslint wants camel cased function name\n  mustache.to_html = function to_html (template, view, partials, send) {\n    /*eslint-enable*/\n\n    var result = mustache.render(template, view, partials);\n\n    if (isFunction(send)) {\n      send(result);\n    } else {\n      return result;\n    }\n  };\n\n  // Export the escaping function so that the user may override it.\n  // See https://github.com/janl/mustache.js/issues/244\n  mustache.escape = escapeHtml;\n\n  // Export these mainly for testing, but also for advanced usage.\n  mustache.Scanner = Scanner;\n  mustache.Context = Context;\n  mustache.Writer = Writer;\n\n  return mustache;\n}));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/mustache/mustache.js\n ** module id = 5\n ** module chunks = 0\n **/","module.exports = function (ruleName, rule) {\n    var self = this\n    if (self._rule[ruleName]) {\n        throw new Error('node_modules/form.test: test.addRule(\"' + ruleName + '\"), \"' + ruleName + '\" existing!')\n    }\n    self._rule[ruleName] = rule\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/addRule.js\n ** module id = 6\n ** module chunks = 0\n **/","var extend = require('extend')\nmodule.exports = function (ruleName, extendRule) {\n    var self = this\n    if (typeof self._rule[ruleName] === 'undefined') {\n        throw new Error('node_modules/form.test: test.replaceRule(\"' + ruleName + '\"), \"' + ruleName + '\" not existing!')\n    }\n    self._rule[ruleName] = extend(true, self._rule[ruleName], extendRule)\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/replaceRule.js\n ** module id = 7\n ** module chunks = 0\n **/","module.exports = {\n\t\"name\": \"form-test\",\n\t\"version\": \"0.6.0\",\n\t\"description\": \"The form data validation library.Does not contain UI.\",\n\t\"main\": \"lib/index.js\",\n\t\"scripts\": {\n\t\t\"build\": \"webpack\",\n\t\t\"dev\": \"webpack --watch\",\n\t\t\"test-ci\": \"./node_modules/jest/bin/jest.js\",\n\t\t\"test\": \"./node_modules/jest/bin/jest.js --watch\"\n\t},\n\t\"repository\": {\n\t\t\"type\": \"git\",\n\t\t\"url\": \"git+https://github.com/fast-flow/form-check.git\"\n\t},\n\t\"keywords\": [\n\t\t\"form\",\n\t\t\"validation\",\n\t\t\"formcheck\"\n\t],\n\t\"author\": \"nimojs\",\n\t\"license\": \"MIT\",\n\t\"bugs\": {\n\t\t\"url\": \"https://github.com/fast-flow/form-check/issues\"\n\t},\n\t\"homepage\": \"https://github.com/fast-flow/form-check#readme\",\n\t\"devDependencies\": {\n\t\t\"jest\": \"^18.1.0\",\n\t\t\"json-loader\": \"^0.5.4\"\n\t},\n\t\"dependencies\": {\n\t\t\"extend\": \"^3.0.0\",\n\t\t\"mustache\": \"^2.3.0\"\n\t},\n\t\"jest\": {\n\t\t\"testRegex\": \"(/__test__/.*|\\\\.(test|spec))\\\\.(ts|tsx|js)$\"\n\t}\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./package.json\n ** module id = 8\n ** module chunks = 0\n **/"],"sourceRoot":""}